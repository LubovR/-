{
	"info": {
		"_postman_id": "7b11b8ba-7734-4228-a192-e3b10ad40592",
		"name": "HW_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Передача token",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"token\", (jsonData.token))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "default",
						"disabled": true
					},
					{
						"key": "",
						"value": "",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "lubov",
							"type": "default"
						},
						{
							"key": "password",
							"value": "lubarad",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//2) Проверка структуры json в ответе.",
							"var schema= {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"person\": {",
							"                \"u_age\": 36,",
							"                \"u_name\": [",
							"                    \"Lubov\",",
							"                    40000,",
							"                    36",
							"                ],",
							"                \"u_salary_1_5_year\": 160000",
							"            },",
							"            \"qa_salary_after_12_months\": 116000.0,",
							"            \"qa_salary_after_6_months\": 80000,",
							"            \"start_qa_salary\": 40000",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"person\",",
							"        \"qa_salary_after_12_months\",",
							"        \"qa_salary_after_6_months\",",
							"        \"start_qa_salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"person\": {",
							"            \"$id\": \"#/properties/person\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The person schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"u_age\": 36,",
							"                    \"u_name\": [",
							"                        \"Lubov\",",
							"                        40000,",
							"                        36",
							"                    ],",
							"                    \"u_salary_1_5_year\": 160000",
							"                }",
							"            ],",
							"            \"required\": [",
							"                \"u_age\",",
							"                \"u_name\",",
							"                \"u_salary_1_5_year\"",
							"            ],",
							"            \"properties\": {",
							"                \"u_age\": {",
							"                    \"$id\": \"#/properties/person/properties/u_age\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_age schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        36",
							"                    ]",
							"                },",
							"                \"u_name\": {",
							"                    \"$id\": \"#/properties/person/properties/u_name\",",
							"                    \"type\": \"array\",",
							"                    \"title\": \"The u_name schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": [],",
							"                    \"examples\": [",
							"                        [",
							"                            \"Lubov\",",
							"                            40000",
							"                        ]",
							"                    ],",
							"                    \"additionalItems\": true,",
							"                    \"items\": {",
							"                        \"$id\": \"#/properties/person/properties/u_name/items\",",
							"                        \"anyOf\": [",
							"                            {",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/0\",",
							"                                \"type\": \"string\",",
							"                                \"title\": \"The first anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": \"\",",
							"                                \"examples\": [",
							"                                    \"Lubov\"",
							"                                ]",
							"                            },",
							"                            {",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/1\",",
							"                                \"type\": \"integer\",",
							"                                \"title\": \"The second anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": 0,",
							"                                \"examples\": [",
							"                                    40000,",
							"                                    36",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                },",
							"                \"u_salary_1_5_year\": {",
							"                    \"$id\": \"#/properties/person/properties/u_salary_1_5_year\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_salary_1_5_year schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        160000",
							"                    ]",
							"                }",
							"            },",
							"            \"additionalProperties\": true",
							"        },",
							"        \"qa_salary_after_12_months\": {",
							"            \"$id\": \"#/properties/qa_salary_after_12_months\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The qa_salary_after_12_months schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                116000.0",
							"            ]",
							"        },",
							"        \"qa_salary_after_6_months\": {",
							"            \"$id\": \"#/properties/qa_salary_after_6_months\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The qa_salary_after_6_months schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                80000",
							"            ]",
							"        },",
							"        \"start_qa_salary\": {",
							"            \"$id\": \"#/properties/start_qa_salary\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The start_qa_salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                40000",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"var jsonData = pm.response.json();",
							"pm.test('Schema is valid', function (){ ",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true})",
							"",
							"//3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"var reqBoby =  JSON.parse(pm.request.body.raw);",
							"var jsonData = pm.response.json();",
							"console.log(jsonData.person)",
							"console.log(reqBoby.salary*4)",
							"",
							"pm.test(\"Start salary\", function() {",
							"    pm.expect(jsonData.start_qa_salary).to.eql(reqBoby.salary)",
							"});",
							"",
							"pm.test(\"qa_salary_after_6_months\", function() {",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(reqBoby.salary*2)",
							"});",
							"",
							"pm.test(\"qa_salary_after_12_months\", function() {",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(reqBoby.salary*2.9)",
							"});",
							"",
							"pm.test(\"u_salary_1_5_year\", function() {",
							"    pm.expect(jsonData.person.u_salary_1_5_year).to.eql(reqBoby.salary*4)",
							"});",
							"",
							"//4) Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user",
							"var salary = jsonData.person.u_salary_1_5_year;",
							"pm.environment.set(\"u_salary_1_5_year\", salary)",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"age\": 36,\n\"salary\": 40000,\n\"name\": \"Lubov\",\n\"auth_token\": \"{{token}}\"}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//2) Проверка структуры json в ответе.",
							"var schema= {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"age\": 38,",
							"            \"name\": \"Nadya\",",
							"            \"salary\": [",
							"                50000,",
							"                \"100000\",",
							"                \"150000\"",
							"            ]",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"age\",",
							"        \"name\",",
							"        \"salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                38",
							"            ]",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Nadya\"",
							"            ]",
							"        },",
							"        \"salary\": {",
							"            \"$id\": \"#/properties/salary\",",
							"            \"type\": \"array\",",
							"            \"title\": \"The salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": [],",
							"            \"examples\": [",
							"                [",
							"                    50000,",
							"                    \"100000\"",
							"                ]",
							"            ],",
							"            \"additionalItems\": true,",
							"            \"items\": {",
							"                \"$id\": \"#/properties/salary/items\",",
							"                \"anyOf\": [",
							"                    {",
							"                        \"$id\": \"#/properties/salary/items/anyOf/0\",",
							"                        \"type\": \"integer\",",
							"                        \"title\": \"The first anyOf schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": 0,",
							"                        \"examples\": [",
							"                            50000",
							"                        ]",
							"                    },",
							"                    {",
							"                        \"$id\": \"#/properties/salary/items/anyOf/1\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The second anyOf schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"100000\",",
							"                            \"150000\"",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"var jsonData = pm.response.json();",
							"pm.test('Schema is valid', function (){ ",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true})",
							"",
							"//3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"var jsonData = pm.response.json();",
							"var reqBody = request.data;",
							"",
							"pm.test(\"salary\", function() {",
							"    pm.expect(String(jsonData.salary[0])).to.eql(reqBody.salary)",
							"});",
							"",
							"pm.test(\"salary*2\", function() {",
							"    pm.expect(jsonData.salary[1]).to.eql(String(reqBody.salary*2))",
							"});",
							"",
							"pm.test(\"salary*3\", function() {",
							"    pm.expect(jsonData.salary[2]).to.eql(String(reqBody.salary*3))",
							"});",
							"",
							"//4) проверить, что 2-й элемент массива salary больше 1-го и 0-го",
							"pm.test(\"Test\", function() {",
							"pm.expect(+jsonData.salary[2]).to.above(+jsonData.salary[0], +jsonData.salary[1])",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "38",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "50000",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Nadya",
							"type": "default"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//2) Проверка структуры json в ответе.",
							"var schema= {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"age\": 30,",
							"            \"daily_food\": 0.6,",
							"            \"daily_sleep\": 125.0,",
							"            \"name\": \"Nastya\"",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"age\",",
							"        \"daily_food\",",
							"        \"daily_sleep\",",
							"        \"name\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                30",
							"            ]",
							"        },",
							"        \"daily_food\": {",
							"            \"$id\": \"#/properties/daily_food\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The daily_food schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                0.6",
							"            ]",
							"        },",
							"        \"daily_sleep\": {",
							"            \"$id\": \"#/properties/daily_sleep\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The daily_sleep schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                125.0",
							"            ]",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Nastya\"",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"var jsonData = pm.response.json();",
							"pm.test('Schema is valid', function (){ ",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true})",
							"",
							"//3) В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"var jsonData = pm.response.json();",
							"var respBoby = request.data;",
							"",
							"pm.test(\"weight*0.012\", function() {",
							"    pm.expect(jsonData.daily_food).to.eql(respBoby.weight*0.012)",
							"});",
							"",
							"pm.test(\"weight*2.5\", function() {",
							"    pm.expect(jsonData.daily_sleep).to.eql(respBoby.weight*2.5)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "30",
							"type": "default"
						},
						{
							"key": "weight",
							"value": "50",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Nastya",
							"type": "default"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{url}}/test_pet_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//2) Проверка структуры json в ответе.",
							"var schema= {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"age\": \"40\",",
							"            \"family\": {",
							"                \"children\": [",
							"                    [",
							"                        \"Alex\",",
							"                        24",
							"                    ],",
							"                    [",
							"                        \"Kate\",",
							"                        12",
							"                    ]",
							"                ],",
							"                \"u_salary_1_5_year\": 240000",
							"            },",
							"            \"name\": \"Ivan\",",
							"            \"salary\": 60000",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"age\",",
							"        \"family\",",
							"        \"name\",",
							"        \"salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"40\"",
							"            ]",
							"        },",
							"        \"family\": {",
							"            \"$id\": \"#/properties/family\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The family schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"children\": [",
							"                        [",
							"                            \"Alex\",",
							"                            24",
							"                        ],",
							"                        [",
							"                            \"Kate\",",
							"                            12",
							"                        ]",
							"                    ],",
							"                    \"u_salary_1_5_year\": 240000",
							"                }",
							"            ],",
							"            \"required\": [",
							"                \"children\",",
							"                \"u_salary_1_5_year\"",
							"            ],",
							"            \"properties\": {",
							"                \"children\": {",
							"                    \"$id\": \"#/properties/family/properties/children\",",
							"                    \"type\": \"array\",",
							"                    \"title\": \"The children schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": [],",
							"                    \"examples\": [",
							"                        [",
							"                            [",
							"                                \"Alex\",",
							"                                24",
							"                            ],",
							"                            [",
							"                                \"Kate\",",
							"                                12",
							"                            ]",
							"                        ]",
							"                    ],",
							"                    \"additionalItems\": true,",
							"                    \"items\": {",
							"                        \"$id\": \"#/properties/family/properties/children/items\",",
							"                        \"anyOf\": [",
							"                            {",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/0\",",
							"                                \"type\": \"array\",",
							"                                \"title\": \"The first anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": [],",
							"                                \"examples\": [",
							"                                    [",
							"                                        \"Alex\",",
							"                                        24",
							"                                    ]",
							"                                ],",
							"                                \"additionalItems\": true,",
							"                                \"items\": {",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items\",",
							"                                    \"anyOf\": [",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/0\",",
							"                                            \"type\": \"string\",",
							"                                            \"title\": \"The first anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": \"\",",
							"                                            \"examples\": [",
							"                                                \"Alex\"",
							"                                            ]",
							"                                        },",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/1\",",
							"                                            \"type\": \"integer\",",
							"                                            \"title\": \"The second anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": 0,",
							"                                            \"examples\": [",
							"                                                24",
							"                                            ]",
							"                                        }",
							"                                    ]",
							"                                }",
							"                            },",
							"                            {",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/1\",",
							"                                \"type\": \"array\",",
							"                                \"title\": \"The second anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": [],",
							"                                \"examples\": [",
							"                                    [",
							"                                        \"Kate\",",
							"                                        12",
							"                                    ]",
							"                                ],",
							"                                \"additionalItems\": true,",
							"                                \"items\": {",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items\",",
							"                                    \"anyOf\": [",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/0\",",
							"                                            \"type\": \"string\",",
							"                                            \"title\": \"The first anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": \"\",",
							"                                            \"examples\": [",
							"                                                \"Kate\"",
							"                                            ]",
							"                                        },",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/1\",",
							"                                            \"type\": \"integer\",",
							"                                            \"title\": \"The second anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": 0,",
							"                                            \"examples\": [",
							"                                                12",
							"                                            ]",
							"                                        }",
							"                                    ]",
							"                                }",
							"                            }",
							"                        ]",
							"                    }",
							"                },",
							"                \"u_salary_1_5_year\": {",
							"                    \"$id\": \"#/properties/family/properties/u_salary_1_5_year\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_salary_1_5_year schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        240000",
							"                    ]",
							"                }",
							"            },",
							"            \"additionalProperties\": true",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Ivan\"",
							"            ]",
							"        },",
							"        \"salary\": {",
							"            \"$id\": \"#/properties/salary\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                60000",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"var jsonData = pm.response.json();",
							"pm.test('Schema is valid', function (){ ",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true",
							"});",
							"",
							"//3) Проверить что занчение поля name = значению переменной name из окружения",
							"",
							"//4) Проверить что занчение поля age в ответе соответсвует отправленному в запросе значению поля age",
							"var jsonData = pm.response.json();",
							"var reqBody = request.data;",
							"pm.test(\"age\", function() {",
							"    pm.expect(jsonData.age).to.eql(reqBody.age)",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "40",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "60000",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Ivan",
							"type": "default"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{url}}/get_test_user",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						},
						{
							"key": "",
							"value": "",
							"type": "default",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{url}}/currency",
					"host": [
						"{{url}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		}
	]
}